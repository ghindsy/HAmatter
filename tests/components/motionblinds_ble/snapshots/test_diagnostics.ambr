# serializer version: 1
# name: test_diagnostics
  dict({
    'device': dict({
      '__type': "<class 'motionblindsble.device.MotionDevice'>",
    }),
    'device_attributes': dict({
      '_battery_callbacks': list([
        dict({
          '__type': "<class 'method'>",
        }),
      ]),
      '_calibration_callbacks': list([
      ]),
      '_calibration_type': None,
      '_connect_status_query_time': None,
      '_connection_callbacks': list([
        dict({
          '__type': "<class 'function'>",
        }),
      ]),
      '_connection_queue': dict({
        '__type': "<class 'motionblindsble.device.ConnectionQueue'>",
      }),
      '_connection_type': dict({
        '__type': "<enum 'MotionConnectionType'>",
      }),
      '_current_bleak_client': None,
      '_custom_setting_disconnect_time': None,
      '_disabled_connection_callbacks': list([
      ]),
      '_disconnect_time': None,
      '_disconnect_timer': None,
      '_end_position_callbacks': list([
      ]),
      '_end_position_info': None,
      '_feedback_callbacks': list([
      ]),
      '_permanent_connection': False,
      '_position': None,
      '_position_callbacks': list([
        dict({
          '__type': "<class 'method'>",
        }),
      ]),
      '_received_end_position_info_event': dict({
        '__type': "<class 'asyncio.locks.Event'>",
      }),
      '_running_callbacks': list([
        dict({
          '__type': "<class 'method'>",
        }),
      ]),
      '_signal_strength_callbacks': list([
        dict({
          '__type': "<class 'function'>",
        }),
      ]),
      '_speed_callbacks': list([
        dict({
          '__type': "<class 'method'>",
        }),
      ]),
      '_status_callbacks': list([
      ]),
      '_tilt': None,
      'ble_device': dict({
        '__type': "<class 'bleak.backends.device.BLEDevice'>",
      }),
      'blind_type': dict({
        '__type': "<enum 'MotionBlindType'>",
      }),
      'display_name': 'Motionblind cccc',
      'rssi': None,
      'timezone': None,
    }),
    'entry': dict({
      'data': dict({
        'address': 'cc:cc:cc:cc:cc:cc',
        'blind_type': 'roller',
        'local_name': 'Motionblind CCCC',
        'mac_code': 'CCCC',
      }),
      'disabled_by': None,
      'domain': 'motionblinds_ble',
      'entry_id': 'mock_entry_id',
      'minor_version': 1,
      'options': dict({
      }),
      'pref_disable_new_entities': False,
      'pref_disable_polling': False,
      'source': 'user',
      'title': '**REDACTED**',
      'unique_id': '**REDACTED**',
      'version': 1,
    }),
  })
# ---
